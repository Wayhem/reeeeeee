/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  Azuki,
  AzukiInterface,
} from "../../../contracts/Greeter.sol/Azuki";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ApprovalCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalToCurrentOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ApproveToCaller",
    type: "error",
  },
  {
    inputs: [],
    name: "BalanceQueryForZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintZeroQuantity",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnerQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFromIncorrectOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToNonERC721ReceiverImplementer",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "URIQueryForNonexistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040518060400160405280600681526020017f42726561636800000000000000000000000000000000000000000000000000008152506040518060400160405280600681526020017f4252454143480000000000000000000000000000000000000000000000000000815250816002908051906020019062000096929190620000d3565b508060039080519060200190620000af929190620000d3565b50620000c0620000ce60201b60201c565b6000819055505050620001e8565b600090565b828054620000e19062000183565b90600052602060002090601f01602090048101928262000105576000855562000151565b82601f106200012057805160ff191683800117855562000151565b8280016001018555821562000151579182015b828111156200015057825182559160200191906001019062000133565b5b50905062000160919062000164565b5090565b5b808211156200017f57600081600090555060010162000165565b5090565b600060028204905060018216806200019c57607f821691505b60208210811415620001b357620001b2620001b9565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b611cdc80620001f86000396000f3fe6080604052600436106100e85760003560e01c80636352211e1161008a578063a22cb46511610059578063a22cb465146102f9578063b88d4fde14610322578063c87b56dd1461034b578063e985e9c514610388576100e8565b80636352211e1461023857806370a082311461027557806395d89b41146102b2578063a0712d68146102dd576100e8565b8063095ea7b3116100c6578063095ea7b31461019257806318160ddd146101bb57806323b872dd146101e657806342842e0e1461020f576100e8565b806301ffc9a7146100ed57806306fdde031461012a578063081812fc14610155575b600080fd5b3480156100f957600080fd5b50610114600480360381019061010f91906117fb565b6103c5565b60405161012191906119d1565b60405180910390f35b34801561013657600080fd5b5061013f610457565b60405161014c91906119ec565b60405180910390f35b34801561016157600080fd5b5061017c6004803603810190610177919061184d565b6104e9565b604051610189919061196a565b60405180910390f35b34801561019e57600080fd5b506101b960048036038101906101b491906117bf565b610565565b005b3480156101c757600080fd5b506101d061070c565b6040516101dd9190611a0e565b60405180910390f35b3480156101f257600080fd5b5061020d600480360381019061020891906116b9565b610723565b005b34801561021b57600080fd5b50610236600480360381019061023191906116b9565b610733565b005b34801561024457600080fd5b5061025f600480360381019061025a919061184d565b610753565b60405161026c919061196a565b60405180910390f35b34801561028157600080fd5b5061029c60048036038101906102979190611654565b610765565b6040516102a99190611a0e565b60405180910390f35b3480156102be57600080fd5b506102c761081e565b6040516102d491906119ec565b60405180910390f35b6102f760048036038101906102f2919061184d565b6108b0565b005b34801561030557600080fd5b50610320600480360381019061031b9190611783565b6108bd565b005b34801561032e57600080fd5b5061034960048036038101906103449190611708565b610a35565b005b34801561035757600080fd5b50610372600480360381019061036d919061184d565b610aa8565b60405161037f91906119ec565b60405180910390f35b34801561039457600080fd5b506103af60048036038101906103aa919061167d565b610b47565b6040516103bc91906119d1565b60405180910390f35b60006301ffc9a760e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061042057506380ac58cd60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806104505750635b5e139f60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b60606002805461046690611b78565b80601f016020809104026020016040519081016040528092919081815260200182805461049290611b78565b80156104df5780601f106104b4576101008083540402835291602001916104df565b820191906000526020600020905b8154815290600101906020018083116104c257829003601f168201915b5050505050905090565b60006104f482610bdb565b61052a576040517fcf4700e400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6006600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600061057082610c3a565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156105d8576040517f943f7b8c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166105f7610d08565b73ffffffffffffffffffffffffffffffffffffffff161461065a576106238161061e610d08565b610b47565b610659576040517fcfb3b94200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b826006600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b6000610716610d10565b6001546000540303905090565b61072e838383610d15565b505050565b61074e83838360405180602001604052806000815250610a35565b505050565b600061075e82610c3a565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156107cd576040517f8f4eb60400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b67ffffffffffffffff600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054169050919050565b60606003805461082d90611b78565b80601f016020809104026020016040519081016040528092919081815260200182805461085990611b78565b80156108a65780601f1061087b576101008083540402835291602001916108a6565b820191906000526020600020905b81548152906001019060200180831161088957829003601f168201915b5050505050905090565b6108ba33826110bf565b50565b6108c5610d08565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561092a576040517fb06307db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060076000610937610d08565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff166109e4610d08565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610a2991906119d1565b60405180910390a35050565b610a40848484610d15565b60008373ffffffffffffffffffffffffffffffffffffffff163b14610aa257610a6b848484846110dd565b610aa1576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b50505050565b6060610ab382610bdb565b610ae9576040517fa14c4b5000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610af361123d565b9050600081511415610b145760405180602001604052806000815250610b3f565b80610b1e84611254565b604051602001610b2f929190611946565b6040516020818303038152906040525b915050919050565b6000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600081610be6610d10565b11158015610bf5575060005482105b8015610c33575060007c0100000000000000000000000000000000000000000000000000000000600460008581526020019081526020016000205416145b9050919050565b60008082905080610c49610d10565b11610cd157600054811015610cd05760006004600083815260200190815260200160002054905060007c010000000000000000000000000000000000000000000000000000000082161415610cce575b6000811415610cc4576004600083600190039350838152602001908152602001600020549050610c99565b8092505050610d03565b505b5b6040517fdf2d9b4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b919050565b600033905090565b600090565b6000610d2082610c3a565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610d87576040517fa114810000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008473ffffffffffffffffffffffffffffffffffffffff16610da8610d08565b73ffffffffffffffffffffffffffffffffffffffff161480610dd75750610dd685610dd1610d08565b610b47565b5b80610e1c5750610de5610d08565b73ffffffffffffffffffffffffffffffffffffffff16610e04846104e9565b73ffffffffffffffffffffffffffffffffffffffff16145b905080610e55576040517f59c896be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415610ebc576040517fea553b3400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610ec985858560016112ae565b6006600084815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081546001900391905081905550600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154600101919050819055507c020000000000000000000000000000000000000000000000000000000060a042901b610fc6866112b4565b1717600460008581526020019081526020016000208190555060007c02000000000000000000000000000000000000000000000000000000008316141561105057600060018401905060006004600083815260200190815260200160002054141561104e57600054811461104d578260046000838152602001908152602001600020819055505b5b505b828473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a46110b885858560016112be565b5050505050565b6110d98282604051806020016040528060008152506112c4565b5050565b60008373ffffffffffffffffffffffffffffffffffffffff1663150b7a02611103610d08565b8786866040518563ffffffff1660e01b81526004016111259493929190611985565b602060405180830381600087803b15801561113f57600080fd5b505af192505050801561117057506040513d601f19601f8201168201806040525081019061116d9190611824565b60015b6111ea573d80600081146111a0576040519150601f19603f3d011682016040523d82523d6000602084013e6111a5565b606091505b506000815114156111e2576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050949350505050565b606060405180602001604052806000815250905090565b60606080604051019050806040528082600183039250600a81066030018353600a810490505b801561129a57600183039250600a81066030018353600a8104905061127a565b508181036020830392508083525050919050565b50505050565b6000819050919050565b50505050565b600080549050600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415611331576040517f2e07630000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600083141561136c576040517fb562e8dd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61137960008583866112ae565b600160406001901b178302600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254019250508190555060e16113de60018514611579565b901b60a042901b6113ee866112b4565b1717600460008381526020019081526020016000208190555060008190506000848201905060008673ffffffffffffffffffffffffffffffffffffffff163b146114f2575b818673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a46114a260008784806001019550876110dd565b6114d8576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8082106114335782600054146114ed57600080fd5b61155d565b5b818060010192508673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a48082106114f3575b81600081905550505061157360008583866112be565b50505050565b6000819050919050565b600061159661159184611a4e565b611a29565b9050828152602081018484840111156115ae57600080fd5b6115b9848285611b36565b509392505050565b6000813590506115d081611c4a565b92915050565b6000813590506115e581611c61565b92915050565b6000813590506115fa81611c78565b92915050565b60008151905061160f81611c78565b92915050565b600082601f83011261162657600080fd5b8135611636848260208601611583565b91505092915050565b60008135905061164e81611c8f565b92915050565b60006020828403121561166657600080fd5b6000611674848285016115c1565b91505092915050565b6000806040838503121561169057600080fd5b600061169e858286016115c1565b92505060206116af858286016115c1565b9150509250929050565b6000806000606084860312156116ce57600080fd5b60006116dc868287016115c1565b93505060206116ed868287016115c1565b92505060406116fe8682870161163f565b9150509250925092565b6000806000806080858703121561171e57600080fd5b600061172c878288016115c1565b945050602061173d878288016115c1565b935050604061174e8782880161163f565b925050606085013567ffffffffffffffff81111561176b57600080fd5b61177787828801611615565b91505092959194509250565b6000806040838503121561179657600080fd5b60006117a4858286016115c1565b92505060206117b5858286016115d6565b9150509250929050565b600080604083850312156117d257600080fd5b60006117e0858286016115c1565b92505060206117f18582860161163f565b9150509250929050565b60006020828403121561180d57600080fd5b600061181b848285016115eb565b91505092915050565b60006020828403121561183657600080fd5b600061184484828501611600565b91505092915050565b60006020828403121561185f57600080fd5b600061186d8482850161163f565b91505092915050565b61187f81611ac2565b82525050565b61188e81611ad4565b82525050565b600061189f82611a7f565b6118a98185611a95565b93506118b9818560208601611b45565b6118c281611c39565b840191505092915050565b60006118d882611a8a565b6118e28185611aa6565b93506118f2818560208601611b45565b6118fb81611c39565b840191505092915050565b600061191182611a8a565b61191b8185611ab7565b935061192b818560208601611b45565b80840191505092915050565b61194081611b2c565b82525050565b60006119528285611906565b915061195e8284611906565b91508190509392505050565b600060208201905061197f6000830184611876565b92915050565b600060808201905061199a6000830187611876565b6119a76020830186611876565b6119b46040830185611937565b81810360608301526119c68184611894565b905095945050505050565b60006020820190506119e66000830184611885565b92915050565b60006020820190508181036000830152611a0681846118cd565b905092915050565b6000602082019050611a236000830184611937565b92915050565b6000611a33611a44565b9050611a3f8282611baa565b919050565b6000604051905090565b600067ffffffffffffffff821115611a6957611a68611c0a565b5b611a7282611c39565b9050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b6000611acd82611b0c565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015611b63578082015181840152602081019050611b48565b83811115611b72576000848401525b50505050565b60006002820490506001821680611b9057607f821691505b60208210811415611ba457611ba3611bdb565b5b50919050565b611bb382611c39565b810181811067ffffffffffffffff82111715611bd257611bd1611c0a565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b611c5381611ac2565b8114611c5e57600080fd5b50565b611c6a81611ad4565b8114611c7557600080fd5b50565b611c8181611ae0565b8114611c8c57600080fd5b50565b611c9881611b2c565b8114611ca357600080fd5b5056fea2646970667358221220996f833700868d49b6d9a0f718e3b8cf854d1914326b371bf50413c7be791c9d64736f6c63430008040033";

type AzukiConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AzukiConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Azuki__factory extends ContractFactory {
  constructor(...args: AzukiConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Azuki> {
    return super.deploy(overrides || {}) as Promise<Azuki>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Azuki {
    return super.attach(address) as Azuki;
  }
  override connect(signer: Signer): Azuki__factory {
    return super.connect(signer) as Azuki__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AzukiInterface {
    return new utils.Interface(_abi) as AzukiInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Azuki {
    return new Contract(address, _abi, signerOrProvider) as Azuki;
  }
}
